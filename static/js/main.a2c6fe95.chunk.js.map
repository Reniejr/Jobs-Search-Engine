{"version":3,"sources":["reportWebVitals.js","UTILITIES/index.js","__COMPONENTS/HomePage/Globe/Globe.jsx","__COMPONENTS/__MAIN/3.Impagination/Impagination.jsx","__COMPONENTS/__MAIN/Loader/Loader.jsx","__COMPONENTS/HomePage/JobsList/JobsList.jsx","__COMPONENTS/HomePage/DetailsSection/DetailSection.jsx","__PAGES/1.HomePage/HomePage.jsx","__PAGES/2.Details/Detail.jsx","__COMPONENTS/__MAIN/2.Navbar/Navbar.jsx","__COMPONENTS/__MAIN/1.Router-Web/RouterWeb.jsx","_STORE/index.js","_REDUCERS/search.js","_REDUCERS/user.js","_REDUCERS/favourites.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getJobsList","query","a","fetch","process","response","json","result","chunkArray","array","value","chunkContainer","times","length","arrayRest","i","chunk","splice","push","Globe","className","PureComponent","Impagination","this","props","results","navigate","currentPage","style","display","onClick","e","id","map","index","backgroundColor","Loader","src","alt","JobsList","page","getJob","job","to","smooth","title","company","location","favs","favourites","filter","fav","addFavourite","connect","state","dispatch","getState","favsList","console","log","type","payload","DetailSection","company_logo","dangerouslySetInnerHTML","__html","description","HomePage","countPage","jobSelected","setState","getJobId","navigatePage","currentTarget","search","chunkResults","prevProps","parseInt","Detail","componentDidMount","match","params","jobId","how_to_apply","Navbar","byDesc","filters","searching","searchQuery","keyCode","showFilters","setTimeout","placeholder","onKeyDown","onChange","getFavs","withRouter","RouterWeb","path","exact","render","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","mainState","user","mainReducer","combineReducers","action","concat","ReactDOM","StrictMode","store","createStore","applyMiddleware","thunk","document","getElementById"],"mappings":"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","file":"static/js/main.a2c6fe95.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//FETCH\r\nexport const getJobsList = async (query) => {\r\n    let response = await fetch(`${process.env.REACT_APP_JOBS_API}${query}`),\r\n        result = await response.json()\r\n    // console.log(result)\r\n    return result\r\n}\r\n\r\n\r\n//DIVIDE BY CHUNKS\r\nexport const chunkArray = (array, value) => {\r\n    let chunkContainer = [],\r\n        times = array.length / value,\r\n        arrayRest = array\r\n    for (let i = 0; i < times; i++) {\r\n        let chunk = []\r\n        chunk = arrayRest.splice(0, value)\r\n        chunkContainer.push(chunk)\r\n    }\r\n    // console.log(chunkContainer)\r\n    return chunkContainer\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./Globe.scss\";\r\n\r\nexport default class Globe extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"globe\">\r\n        <i\r\n          className=\"fas fa-map-marker-alt\"\r\n          //   style={{ top: \"37.3229978%\", left: \"122.03212823%\" }}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./Impagination.scss\";\r\n\r\nexport default class Impagination extends PureComponent {\r\n  render() {\r\n    const { results, navigate, currentPage } = this.props;\r\n    return (\r\n      <div\r\n        className=\"impagination\"\r\n        style={{ display: results ? \"block\" : \"none\" }}\r\n      >\r\n        <button onClick={(e) => navigate(e)} id=\"prev\">\r\n          prev\r\n        </button>\r\n        {results ? (\r\n          results.map((result, index) => {\r\n            return (\r\n              <button\r\n                onClick={(e) => navigate(e)}\r\n                value={index}\r\n                key={index}\r\n                style={{\r\n                  backgroundColor:\r\n                    currentPage === index ? \"#59d7f3\" : \"transparent\",\r\n                }}\r\n              >\r\n                {index + 1}\r\n              </button>\r\n            );\r\n          })\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n        <button onClick={(e) => navigate(e)} id=\"next\">\r\n          next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./Loader.scss\";\r\n\r\nexport default class Loader extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"job-loader\">\r\n        <div className=\"slider\">\r\n          <div className=\"slide-container\">\r\n            <img src=\"./assets/1.png\" alt=\"\" />\r\n            <img src=\"./assets/2.png\" alt=\"\" />\r\n            <img src=\"./assets/3.png\" alt=\"\" />\r\n            <img src=\"./assets/4.png\" alt=\"\" />\r\n            <img src=\"./assets/5.png\" alt=\"\" />\r\n            <img src=\"./assets/6.png\" alt=\"\" />\r\n          </div>\r\n          <p>...Looking for Jobs...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link as Atag } from \"react-scroll\";\r\nimport Loader from \"../../__MAIN/Loader/Loader\";\r\n\r\n//STYLE\r\nimport \"./JobsList.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addFavourite: (job) =>\r\n    dispatch(async (dispatch, getState) => {\r\n      let favsList = getState().favs.favourites;\r\n      console.log(favsList);\r\n      if (favsList.filter((fav) => fav.id === job.id).length > 0) {\r\n        dispatch({\r\n          type: \"REMOVE_FAV\",\r\n          payload: job,\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"ADD_FAV\",\r\n          payload: job,\r\n        });\r\n      }\r\n    }),\r\n});\r\n\r\nclass JobsList extends PureComponent {\r\n  render() {\r\n    const { page, getJob } = this.props;\r\n    return (\r\n      <div className=\"job-section\">\r\n        {page ? (\r\n          <ul className=\"jobs-list\">\r\n            {page.map((job) => {\r\n              return (\r\n                <li key={job.id}>\r\n                  <Atag\r\n                    to=\"detail-section\"\r\n                    smooth={true}\r\n                    onClick={() => getJob(job.id, job)}\r\n                  >\r\n                    <h6>{job.title}</h6>\r\n                  </Atag>\r\n                  <span>\r\n                    Company : <span>{job.company}</span>\r\n                  </span>{\" \"}\r\n                  <span>\r\n                    Location : <span>{job.location}</span>\r\n                  </span>\r\n                  <p>\r\n                    {job.id}\r\n                    <i\r\n                      className={`${\r\n                        this.props.favs.favourites.filter(\r\n                          (fav) => fav.id === job.id\r\n                        ).length > 0\r\n                          ? \"fas\"\r\n                          : \"far\"\r\n                      } fa-heart`}\r\n                      onClick={() => this.props.addFavourite(job)}\r\n                    ></i>\r\n                  </p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(JobsList);\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./DetailSection.scss\";\r\n\r\nexport default class DetailSection extends PureComponent {\r\n  render() {\r\n    const { job } = this.props;\r\n    return (\r\n      <div className=\"detail-section\" id=\"detail-section\">\r\n        {job ? (\r\n          <div className=\"details\">\r\n            <div className=\"header\">\r\n              <img src={job.company_logo} alt=\"\" />\r\n              <div className=\"title\">\r\n                <h2>{job.title}</h2>\r\n                <span>\r\n                  Company: <span>{job.company}</span>\r\n                </span>{\" \"}\r\n                <span>\r\n                  Location: <span>{job.location}</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"description\"\r\n              dangerouslySetInnerHTML={{ __html: job.description }}\r\n            ></div>\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//UTILITIES IMPORTS\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport Globe from \"../../__COMPONENTS/HomePage/Globe/Globe\";\r\nimport Impagination from \"../../__COMPONENTS/__MAIN/3.Impagination/Impagination\";\r\nimport JobsList from \"../../__COMPONENTS/HomePage/JobsList/JobsList\";\r\nimport DetailSection from \"../../__COMPONENTS/HomePage/DetailsSection/DetailSection\";\r\n//STYLE\r\nimport \"./HomePage.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nclass HomePage extends PureComponent {\r\n  state = {\r\n    page: null,\r\n    currentPage: 0,\r\n    countPage: 1,\r\n    job: null,\r\n  };\r\n\r\n  getJob = async (id, job) => {\r\n    let jobSelected = job;\r\n    this.setState({ job: jobSelected });\r\n    this.props.getJobId(id);\r\n  };\r\n\r\n  navigatePage = (e) => {\r\n    let id = e.currentTarget.id,\r\n      results = this.props.search.chunkResults,\r\n      page;\r\n    switch (id) {\r\n      case \"prev\":\r\n        if (this.state.currentPage > 0) {\r\n          page = results[this.state.currentPage - 1];\r\n          this.setState({\r\n            page: page,\r\n            currentPage: this.state.currentPage - 1,\r\n          });\r\n        }\r\n        break;\r\n      case \"next\":\r\n        if (this.state.currentPage < results.length) {\r\n          page = results[this.state.currentPage + 1];\r\n          this.setState({\r\n            page: page,\r\n            currentPage: this.state.currentPage + 1,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        page = results[e.currentTarget.value];\r\n        this.setState({ page: page, currentPage: e.currentTarget.value });\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let results = this.props.search.chunkResults;\r\n    if (results) {\r\n      let page = results[this.state.currentPage];\r\n      this.setState({ page: page, countPage: results.length });\r\n    }\r\n    console.log(this.props.search);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.search.chunkResults !== this.props.search.chunkResults) {\r\n      let results = this.props.search.chunkResults,\r\n        page = results[this.state.currentPage];\r\n      this.setState({ page: page, countPage: results.length });\r\n      console.log(this.props.search);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { results } = this.props;\r\n    return (\r\n      <div id=\"home-page\">\r\n        <div className=\"header\">\r\n          <div className=\"right-side\">\r\n            <Globe />\r\n          </div>\r\n          <div className=\"left-side\">\r\n            <Impagination\r\n              results={this.props.search.chunkResults}\r\n              navigate={this.navigatePage}\r\n              currentPage={parseInt(this.state.currentPage)}\r\n            />\r\n            <JobsList page={this.state.page} getJob={this.getJob} />\r\n          </div>\r\n        </div>\r\n        <DetailSection job={this.state.job} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import React, { PureComponent } from \"react\";\r\nimport { getJobsList } from \"../../UTILITIES\";\r\n\r\n//STYLE\r\nimport \"./Detail.scss\";\r\n\r\nexport default class Detail extends PureComponent {\r\n  state = {\r\n    job: null,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let id = this.props.match.params.jobId;\r\n    let query = `/positions/${id}.json`;\r\n    let result = await getJobsList(query);\r\n    // console.log(result);\r\n    this.setState({ job: result });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div className=\"detail-container\">\r\n        {this.state.job ? (\r\n          <div className=\"detail\">\r\n            <h1>{this.state.job.title}</h1>\r\n            <p>{this.state.job.company}</p>\r\n            <p\r\n              dangerouslySetInnerHTML={{ __html: this.state.job.description }}\r\n            ></p>\r\n            <p\r\n              dangerouslySetInnerHTML={{ __html: this.state.job.how_to_apply }}\r\n            ></p>\r\n          </div>\r\n        ) : (\r\n          <p>No Job</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getJobsList, chunkArray } from \"../../../UTILITIES\";\r\n\r\n//STYLE\r\nimport \"./Navbar.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  search: (query) =>\r\n    dispatch(async (dispatch, getState) => {\r\n      let results = await getJobsList(query);\r\n      let chunkResults = chunkArray(results, 5);\r\n      // console.log(results);\r\n      dispatch({\r\n        type: \"SEARCH_ENGINE\",\r\n        payload: { results: results, chunkResults: chunkResults },\r\n      });\r\n    }),\r\n  getFavs: () =>\r\n    dispatch((dispatch, getState) => {\r\n      let favsList = getState().favs.favourites;\r\n      console.log(favsList);\r\n      let chunkResults = chunkArray(favsList, 5);\r\n      dispatch({\r\n        type: \"GET_FAVS\",\r\n        payload: chunkResults,\r\n      });\r\n    }),\r\n});\r\n\r\nclass Navbar extends PureComponent {\r\n  state = {\r\n    search: `/positions.json`,\r\n    byDesc: {\r\n      description: \"\",\r\n      location: \"\",\r\n    },\r\n    filters: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => {\r\n      this.props.search(this.state.search);\r\n    }, 5000);\r\n  }\r\n\r\n  searching = (e) => {\r\n    let searchQuery,\r\n      byDesc = { ...this.state.byDesc },\r\n      id = e.currentTarget.id;\r\n    if (e.keyCode === 13) {\r\n      this.props.search(this.state.search);\r\n    } else {\r\n      switch (id) {\r\n        case \"description\":\r\n          byDesc[id] = e.currentTarget.value;\r\n          searchQuery = `/positions.json?description=${byDesc.description}&location=${byDesc.location}`;\r\n          break;\r\n        case \"location\":\r\n          byDesc[id] = e.currentTarget.value;\r\n          searchQuery = `/positions.json?description=${byDesc.description}&location=${byDesc.location}`;\r\n          break;\r\n        default:\r\n          searchQuery = `/positions.json?search=${e.currentTarget.value}`;\r\n          break;\r\n      }\r\n      this.setState({ search: searchQuery, byDesc });\r\n    }\r\n  };\r\n\r\n  showFilters = () => {\r\n    this.setState({ filters: !this.state.filters });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <nav>\r\n        <div className=\"title\">\r\n          <img src=\"./assets/company.png\" alt=\"\" />\r\n          <p>Jobs App</p>\r\n        </div>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-bar\"\r\n            placeholder=\"Look for a job\"\r\n            onKeyDown={this.searching}\r\n            onChange={this.searching}\r\n            style={{ display: this.state.filters ? \"none\" : \"inline-flex\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-caret-right\"\r\n            onClick={() => this.showFilters()}\r\n          ></i>\r\n\r\n          <div\r\n            className=\"filters\"\r\n            style={{ display: this.state.filters ? \"inline-flex\" : \"none\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              onKeyDown={this.searching}\r\n              onChange={this.searching}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"location\"\r\n              placeholder=\"Location\"\r\n              onKeyDown={this.searching}\r\n              onChange={this.searching}\r\n            />\r\n          </div>\r\n          <i className=\"fas fa-search\"></i>\r\n        </div>\r\n        <button onClick={() => this.props.getFavs()}>Show Favourites</button>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbar));\r\n","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n//UTILITIES IMPORTS\r\nimport { getJobsList, chunkArray } from \"../../../UTILITIES\";\r\n//PERSONAL COMPONENTS IMPORT\r\nimport HomePage from \"../../../__PAGES/1.HomePage/HomePage\";\r\nimport Detail from \"../../../__PAGES/2.Details/Detail\";\r\nimport Navbar from \"../2.Navbar/Navbar\";\r\n//STYLE\r\nimport \"./RouterWeb.scss\";\r\n\r\nconst mapStateToProps = (state) => state;\r\n\r\nclass RouterWeb extends PureComponent {\r\n  state = {\r\n    results: null,\r\n    jobId: null,\r\n    job: null,\r\n  };\r\n\r\n  getJobId = (jobId) => {\r\n    this.setState({ jobId: jobId });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div id=\"router-web\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(props) => (\r\n              <HomePage\r\n                // {...props}\r\n                // results={this.state.results}\r\n                getJobId={this.getJobId}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/jobs/:jobId\"\r\n            exact\r\n            render={(props) => <Detail {...props} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RouterWeb);\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\r\nimport {searchReducer} from '../_REDUCERS/search'\r\nimport userReducer from '../_REDUCERS/user'\r\nimport {favReducer} from '../_REDUCERS/favourites'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const mainState = {\r\n    search: {\r\n        results: [],\r\n        chunkResults:[]\r\n    },\r\n    user: {\r\n        user:null\r\n    },\r\n    favs: {\r\n        favourites:[]\r\n    }\r\n}\r\n\r\nconst mainReducer = combineReducers({\r\n    search: searchReducer,\r\n    user: userReducer,\r\n    favs: favReducer\r\n})\r\n\r\nexport default function configureStore() {\r\n    return createStore(mainReducer, mainState, composedEnhancer(applyMiddleware(thunk)))\r\n  }","export const searchReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_ENGINE':\r\n            return {\r\n                ...state,\r\n                results: action.payload.results,\r\n                chunkResults: action.payload.chunkResults\r\n            }\r\n        case 'GET_FAVS': \r\n            return {\r\n                ...state,\r\n                chunkResults: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case 'SET_NAME':\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","export const favReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_FAV':\r\n            return {\r\n            ...state,\r\n            favourites : state.favourites.concat(action.payload)\r\n            \r\n            }\r\n        \r\n        case 'REMOVE_FAV':\r\n            return {\r\n            ...state,\r\n            favourites : [...state.favourites.filter(fav => fav !== action.payload)]\r\n            }\r\n        \r\n        default: return state            \r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RouterWeb from './__COMPONENTS/__MAIN/1.Router-Web/RouterWeb';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './_STORE'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Router>\n        <RouterWeb/>\n      </Router>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}