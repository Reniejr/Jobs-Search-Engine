{"version":3,"sources":["reportWebVitals.js","UTILITIES/index.js","__COMPONENTS/HomePage/Globe/Globe.jsx","__COMPONENTS/__MAIN/3.Impagination/Impagination.jsx","__COMPONENTS/HomePage/JobsList/JobsList.jsx","__COMPONENTS/HomePage/DetailsSection/DetailSection.jsx","__PAGES/1.HomePage/HomePage.jsx","__PAGES/2.Details/Detail.jsx","__COMPONENTS/__MAIN/2.Navbar/Navbar.jsx","__COMPONENTS/__MAIN/1.Router-Web/RouterWeb.jsx","_REDUCERS/index.js","_STORE/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getJobsList","query","a","fetch","process","response","json","result","console","log","chunkArray","array","value","chunkContainer","times","length","arrayRest","i","chunk","splice","push","Globe","className","PureComponent","Impagination","this","props","results","navigate","style","display","onClick","e","id","map","index","JobsList","page","getJob","job","to","smooth","title","company","location","DetailSection","description","HomePage","state","currentPage","countPage","jobSelected","setState","getJobId","navigatePage","currentTarget","prevProps","Detail","componentDidMount","match","params","jobId","dangerouslySetInnerHTML","__html","how_to_apply","Navbar","byDesc","byLocation","lat","long","filters","search","searchByDescriptions","keyCode","searching","showFilters","src","alt","type","placeholder","onKeyDown","onChange","withRouter","RouterWeb","searchByLocations","path","exact","render","searchReducer","searchState","action","payload","ReactDOM","StrictMode","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.ffa0e966.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//FETCH\r\nexport const getJobsList = async (query) => {\r\n    let response = await fetch(`${process.env.REACT_APP_JOBS_API}${query}`),\r\n        result = await response.json()\r\n    console.log(result)\r\n    return result\r\n}\r\n\r\n\r\n//DIVIDE BY CHUNKS\r\nexport const chunkArray = (array, value) => {\r\n    let chunkContainer = [],\r\n        times = array.length / value,\r\n        arrayRest = array\r\n    for (let i = 0; i < times; i++) {\r\n        let chunk = []\r\n        chunk = arrayRest.splice(0, value)\r\n        chunkContainer.push(chunk)\r\n    }\r\n    console.log(chunkContainer)\r\n    return chunkContainer\r\n}\r\n\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./Globe.scss\";\r\n\r\nexport default class Globe extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div className=\"globe\">\r\n        <i\r\n          className=\"fas fa-map-marker-alt\"\r\n          //   style={{ top: \"37.3229978%\", left: \"122.03212823%\" }}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./Impagination.scss\";\r\n\r\nexport default class Impagination extends PureComponent {\r\n  render() {\r\n    const { results, navigate } = this.props;\r\n    return (\r\n      <div\r\n        className=\"impagination\"\r\n        style={{ display: results ? \"block\" : \"none\" }}\r\n      >\r\n        <button onClick={(e) => navigate(e)} id=\"prev\">\r\n          prev\r\n        </button>\r\n        {results ? (\r\n          results.map((result, index) => {\r\n            return (\r\n              <button onClick={(e) => navigate(e)} value={index} key={index}>\r\n                {index + 1}\r\n              </button>\r\n            );\r\n          })\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { Link as Atag } from \"react-scroll\";\r\n\r\n//STYLE\r\nimport \"./JobsList.scss\";\r\nexport default class JobsList extends PureComponent {\r\n  render() {\r\n    const { page, getJob } = this.props;\r\n    return (\r\n      <ul className=\"jobs-list\">\r\n        {page ? (\r\n          page.map((job) => {\r\n            return (\r\n              <li key={job.id}>\r\n                <Atag\r\n                  to=\"detail-section\"\r\n                  smooth={true}\r\n                  onClick={() => getJob(job.id, job)}\r\n                >\r\n                  <h6>{job.title}</h6>\r\n                  <span>\r\n                    Company : <span>{job.company}</span>\r\n                  </span>{\" \"}\r\n                  <span>\r\n                    Location : <span>{job.location}</span>\r\n                  </span>\r\n                  <p>{job.id}</p>\r\n                </Atag>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No results</p>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\n\r\n//STYLE\r\nimport \"./DetailSection.scss\";\r\n\r\nexport default class DetailSection extends PureComponent {\r\n  render() {\r\n    const { job } = this.props;\r\n    return (\r\n      <div className=\"detail-section\" id=\"detail-section\">\r\n        {job ? (\r\n          <div className=\"details\">\r\n            {job.title}\r\n            {job.company}\r\n            {job.location}\r\n            {job.description}\r\n          </div>\r\n        ) : (\r\n          <p></p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//UTILITIES IMPORTS\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport Globe from \"../../__COMPONENTS/HomePage/Globe/Globe\";\r\nimport Impagination from \"../../__COMPONENTS/__MAIN/3.Impagination/Impagination\";\r\nimport JobsList from \"../../__COMPONENTS/HomePage/JobsList/JobsList\";\r\nimport DetailSection from \"../../__COMPONENTS/HomePage/DetailsSection/DetailSection\";\r\n//STYLE\r\nimport \"./HomePage.scss\";\r\n\r\nexport default class HomePage extends PureComponent {\r\n  state = {\r\n    page: null,\r\n    currentPage: 0,\r\n    countPage: 1,\r\n    job: null,\r\n  };\r\n\r\n  // getJobId = (id) => {\r\n  //   this.props.getJobId(id);\r\n  //   console.log(id);\r\n  // };\r\n\r\n  getJob = async (id, job) => {\r\n    let jobSelected = job;\r\n    this.setState({ job: jobSelected });\r\n    this.props.getJobId(id);\r\n  };\r\n\r\n  navigatePage = (e) => {\r\n    let id = e.currentTarget.id,\r\n      results = this.props.results,\r\n      page;\r\n    switch (id) {\r\n      case \"prev\":\r\n        if (this.state.currentPage > 0) {\r\n          page = results[this.state.currentPage - 1];\r\n          this.setState({\r\n            page: page,\r\n            currentPage: this.state.currentPage - 1,\r\n          });\r\n        }\r\n        break;\r\n      case \"next\":\r\n        if (this.state.currentPage < results.length) {\r\n          page = results[this.state.currentPage + 1];\r\n          this.setState({\r\n            page: page,\r\n            currentPage: this.state.currentPage + 1,\r\n          });\r\n        }\r\n        break;\r\n      default:\r\n        page = results[e.currentTarget.value];\r\n        this.setState({ page: page, currentPage: e.currentTarget.value });\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let results = this.props.results;\r\n    if (results) {\r\n      let page = results[this.state.currentPage];\r\n      this.setState({ page: page, countPage: results.length });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.results !== this.props.results) {\r\n      let results = this.props.results,\r\n        page = results[this.state.currentPage];\r\n      this.setState({ page: page, countPage: results.length });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { results } = this.props;\r\n    return (\r\n      <div id=\"home-page\">\r\n        <div className=\"header\">\r\n          <div className=\"right-side\">\r\n            <Globe />\r\n          </div>\r\n          <div className=\"left-side\">\r\n            <Impagination results={results} navigate={this.navigatePage} />\r\n            <JobsList page={this.state.page} getJob={this.getJob} />\r\n          </div>\r\n        </div>\r\n        <DetailSection job={this.state.job} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { getJobsList } from \"../../UTILITIES\";\r\n\r\n//STYLE\r\nimport \"./Detail.scss\";\r\n\r\nexport default class Detail extends PureComponent {\r\n  state = {\r\n    job: null,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    let id = this.props.match.params.jobId;\r\n    let query = `/positions/${id}.json`;\r\n    let result = await getJobsList(query);\r\n    // console.log(result);\r\n    this.setState({ job: result });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div className=\"detail-container\">\r\n        {this.state.job ? (\r\n          <div className=\"detail\">\r\n            <h1>{this.state.job.title}</h1>\r\n            <p>{this.state.job.company}</p>\r\n            <p\r\n              dangerouslySetInnerHTML={{ __html: this.state.job.description }}\r\n            ></p>\r\n            <p\r\n              dangerouslySetInnerHTML={{ __html: this.state.job.how_to_apply }}\r\n            ></p>\r\n          </div>\r\n        ) : (\r\n          <p>No Job</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\n\r\n//UTILITIES IMPORTS\r\nimport { getJobsList } from \"../../../UTILITIES\";\r\n\r\n//STYLE\r\nimport \"./Navbar.scss\";\r\n\r\nclass Navbar extends PureComponent {\r\n  //   search = async (e) => {\r\n  //     if (e.keyCode === 13) {\r\n  //       //   console.log(this.props.state);\r\n  //       let query = `/positions.json?search=${this.props.state}`;\r\n  //       let result = await getJobsList(query);\r\n  //       //   console.log(result);\r\n  //     } else {\r\n  //       let searching = e.currentTarget.value;\r\n  //       this.props.search(searching);\r\n  //     }\r\n  //   };\r\n\r\n  //   searchByDescriptions = async (e) => {\r\n  //     if (e.keyCode === 13) {\r\n  //       let query = `/positions.json?description=${this.props.description}&location=${this.props.location}`;\r\n  //       let result = await getJobsList(query);\r\n  //       //   console.log(result);\r\n  //       console.log(this.props);\r\n  //     } else {\r\n  //       let searching = { description: \"\", location: \"\" };\r\n  //       let currentId = e.currentTarget.id;\r\n  //       searching[currentId] = e.currentTarget.value;\r\n  //       //   console.log(searching);\r\n  //       this.props.searchDescription(searching);\r\n  //     }\r\n  //   };\r\n\r\n  //   searchByLocations = (e) => {\r\n  //     if (e.keyCode === 13) {\r\n  //       //   console.log(this.props.state);\r\n  //     } else {\r\n  //       let searching = {\r\n  //         lat: \"\",\r\n  //         long: \"\",\r\n  //       };\r\n  //       let currentId = e.currentTarget.id;\r\n  //       searching[currentId] = e.currentTarget.value;\r\n  //       this.props.search(searching);\r\n  //     }\r\n  //   };\r\n\r\n  state = {\r\n    byDesc: {\r\n      description: \"\",\r\n      location: \"\",\r\n    },\r\n    byLocation: {\r\n      lat: \"\",\r\n      long: \"\",\r\n    },\r\n    filters: false,\r\n  };\r\n\r\n  search = (e) => {\r\n    this.props.search(e);\r\n  };\r\n\r\n  searchByDescriptions = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.props.searchByDescriptions(this.state.byDesc);\r\n    } else {\r\n      let searching = { ...this.state.byDesc };\r\n      let currentId = e.currentTarget.id;\r\n      searching[currentId] = e.currentTarget.value;\r\n      this.setState({ byDesc: searching });\r\n    }\r\n  };\r\n\r\n  showFilters = () => {\r\n    this.setState({ filters: !this.state.filters });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.state);\r\n    return (\r\n      <nav>\r\n        <div className=\"title\">\r\n          <img src=\"./assets/company.png\" alt=\"\" />\r\n          <p>Jobs App</p>\r\n        </div>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"search-bar\"\r\n            placeholder=\"Look for a job\"\r\n            onKeyDown={this.search}\r\n            onChange={this.search}\r\n            style={{ display: this.state.filters ? \"none\" : \"inline-flex\" }}\r\n          />\r\n          <i\r\n            className=\"fas fa-caret-right\"\r\n            onClick={() => this.showFilters()}\r\n          ></i>\r\n\r\n          <div\r\n            className=\"filters\"\r\n            style={{ display: this.state.filters ? \"inline-flex\" : \"none\" }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              id=\"description\"\r\n              placeholder=\"Description\"\r\n              onKeyDown={this.searchByDescriptions}\r\n              onChange={this.searchByDescriptions}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              id=\"location\"\r\n              placeholder=\"Location\"\r\n              onKeyDown={this.searchByDescriptions}\r\n              onChange={this.searchByDescriptions}\r\n            />\r\n          </div>\r\n          <i className=\"fas fa-search\"></i>\r\n        </div>\r\n        {/* <ul className=\"nav-menu\">\r\n          <li></li>\r\n        </ul> */}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Navbar);\r\n","//MAIN IMPORTS\r\nimport React, { PureComponent } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n//UTILITIES IMPORTS\r\nimport { getJobsList, chunkArray } from \"../../../UTILITIES\";\r\n//PERSONAL COMPONENTS IMPORT\r\nimport HomePage from \"../../../__PAGES/1.HomePage/HomePage\";\r\nimport Detail from \"../../../__PAGES/2.Details/Detail\";\r\nimport Navbar from \"../2.Navbar/Navbar\";\r\n//STYLE\r\nimport \"./RouterWeb.scss\";\r\n\r\nexport default class RouterWeb extends PureComponent {\r\n  state = {\r\n    search: \"\",\r\n    byDesc: {\r\n      description: \"\",\r\n      location: \"\",\r\n    },\r\n    byLocation: {\r\n      lat: \"\",\r\n      long: \"\",\r\n    },\r\n    results: null,\r\n    jobId: null,\r\n    job: null,\r\n  };\r\n\r\n  search = async (e) => {\r\n    if (e.keyCode === 13) {\r\n      //   console.log(this.props.state);\r\n      let query = `/positions.json?search=${this.state.search}`;\r\n      let result = await getJobsList(query);\r\n      if (result.length > 5) {\r\n        result = chunkArray(result, 5);\r\n      }\r\n      //   console.log(result);\r\n      this.setState({ results: result });\r\n    } else {\r\n      let searching = e.currentTarget.value;\r\n      this.setState({ search: searching });\r\n    }\r\n  };\r\n\r\n  searchByDescriptions = async (byDesc) => {\r\n    let query = `/positions.json?description=${byDesc.description}&location=${byDesc.location}`;\r\n    let result = await getJobsList(query);\r\n    this.setState({ results: result });\r\n  };\r\n\r\n  searchByLocations = (e) => {\r\n    if (e.keyCode === 13) {\r\n      //   console.log(this.props.state);\r\n    } else {\r\n      let searching = {\r\n        lat: \"\",\r\n        long: \"\",\r\n      };\r\n      let currentId = e.currentTarget.id;\r\n      searching[currentId] = e.currentTarget.value;\r\n      this.props.search(searching);\r\n    }\r\n  };\r\n\r\n  getJobId = (jobId) => {\r\n    this.setState({ jobId: jobId });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"router-web\">\r\n        <Navbar\r\n          search={this.search}\r\n          searchByLocations={this.searchByLocations}\r\n          searchByDescriptions={this.searchByDescriptions}\r\n        />\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={(props) => (\r\n              <HomePage\r\n                {...props}\r\n                results={this.state.results}\r\n                getJobId={this.getJobId}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/jobs/:jobId\"\r\n            exact\r\n            render={(props) => <Detail {...props} />}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// import React from \"react\";\r\n// import { connect } from \"react-redux\";\r\n// import { Switch, Route } from \"react-router-dom\";\r\n// //PERSONAL COMPONENTS IMPORT\r\n// import HomePage from \"../../../__PAGES/1.HomePage/HomePage\";\r\n// import Navbar from \"../2.Navbar/Navbar\";\r\n// //STYLE\r\n// import \"./RouterWeb.scss\";\r\n\r\n// //STATE TO PROPS\r\n// const mapStateToProps = (state) => ({\r\n//   search: state.search,\r\n//   description: state.description,\r\n//   location: state.location,\r\n//   lat: state.lat,\r\n//   long: state.long,\r\n// });\r\n\r\n// //DISPATCH\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   searchEngine: (searching) =>\r\n//     dispatch({\r\n//       type: \"SEARCH_ENGINE\",\r\n//       payload: {\r\n//         search: searching,\r\n//       },\r\n//     }),\r\n//   searchDescription: (searching) =>\r\n//     dispatch({\r\n//       type: \"SEARCH_DESCRIPTION\",\r\n//       payload: {\r\n//         description: searching.description,\r\n//         location: searching.location,\r\n//       },\r\n//     }),\r\n//   searchLocation: (searching) =>\r\n//     dispatch({\r\n//       type: \"SEARCH_LOCATION\",\r\n//       payload: {\r\n//         lat: searching.lat,\r\n//         long: searching.long,\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// function RouterWeb({\r\n//   search,\r\n//   description,\r\n//   location,\r\n//   lat,\r\n//   long,\r\n//   searchEngine,\r\n//   searchDescription,\r\n//   searchLocation,\r\n// }) {\r\n//   return (\r\n//     <div id=\"router-web\">\r\n//       <Navbar\r\n//         search={searchEngine}\r\n//         searching={search}\r\n//         description={description}\r\n//         location={location}\r\n//         lat={lat}\r\n//         long={long}\r\n//         searchDescription={searchDescription}\r\n//         searchLocation={searchLocation}\r\n//       />\r\n//       <Switch>\r\n//         <Route path=\"/\" exact render={(props) => <HomePage {...props} />} />\r\n//       </Switch>\r\n//     </div>\r\n//   );\r\n// }\r\n// export default connect(mapStateToProps, mapDispatchToProps)(RouterWeb);\r\n","//SEARCH REDUCER\r\nimport { searchState } from '../_STORE'\r\n\r\nexport const searchReducer = (state = searchState, action) => {\r\n    switch (action.type) {\r\n\r\n        case 'SEARCH_ENGINE':\r\n            return {\r\n                ...state,\r\n                search: action.payload.search\r\n            }\r\n        case 'SEARCH_DESCRIPTION':\r\n            return {\r\n                ...state,\r\n                description: action.payload.description,\r\n                location: action.payload.location\r\n            }\r\n        case 'SEARCH_LOCATION':\r\n            return {\r\n                ...state,\r\n                lat: action.payload.lat,\r\n                long: action.payload.long\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore } from 'redux'\r\nimport {searchReducer} from '../_REDUCERS'\r\n\r\nexport const searchState = {\r\n    search: '',\r\n    description: '',\r\n    location: '',\r\n    lat: '',\r\n    long: ''\r\n}\r\n\r\nexport const searchConfig = () => createStore(\r\n    searchReducer,\r\n    searchState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RouterWeb from './__COMPONENTS/__MAIN/1.Router-Web/RouterWeb';\nimport { HashRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport {searchConfig} from './_STORE'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={searchConfig()}>\n      <Router>\n        <RouterWeb/>\n      </Router>  \n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}